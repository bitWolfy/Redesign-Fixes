@import '../themes/theme_!index';
@import '../themes/extra_!index';

@mixin themable($data_map: $theme_index, $base_style: false) {
    // Apply the default style to the original element
    @if (map-has-key($data_map, "default") && map_has_key(map-get($data_map, "themes"), map-get($data_map, "default"))) {
        $data_current: map-get(map-get($data_map, "themes"), map-get($data_map, "default")) !global;
        @content;
        $data_current: null !global;
    }

    $data_attr: "custom";
    @if (map_has_key($data_map, "data-attr")) {
        $data_attr: map-get($data_map, "data-attr");
    }

    // Iterates over the list of themes and creates corresponding classes
    @each $theme, $map in map-get($data_map, "themes") {
        @if ($base_style == true) {
            &[data-#{$data_attr}=#{$theme}] {
                $data_current: $map !global;
                @content;
                $data_current: null !global;
            }
        } @else {
            body[data-#{$data_attr}=#{$theme}] & {
                $data_current: $map !global;
                @content;
                $data_current: null !global;
            }
        }
    }
}

// Used inside @themable mixin to fetch necessary values
@function themed($key) {
    @return map-get($data_current, $key);
}
